## Custom annotations for Codefresh ingress resource that override defaults
#annotations:
#  kubernetes.io/ingress.class: nginx-codefresh

## Persistent services (mongodb, consul, postgress, redit, rabbit) configuration
# you can configure storageClass for dynamic volume provisoning or precreated existingPvc name
# existingPvc should exist before launching the intallation and takes precedence over storageClass
#
# Specify node selector if 
# Example 1, mongodb with storageClass for dynamic volume provisoning:
# mongodb:
#   storageClass: ceph-pool-1
#   storageSize: 8Gi
#
# Example 2, postgresql on precreated pvc for local volume on cpecific volume
# 
# postgresql:
#   existingPvc: cf-postgress-lv
#   nodeSelector:
#     kubernetes.io/hostname: storage-host-01

mongodb:
    storageSize: 8Gi
    storageClass: 
    #existingPvc: cf-mongodb
    #nodeSelector:
    #  kubernetes.io/hostname: storage-host-01
  
  postgresql:
    storageSize: 8Gi
    storageClass:
    #existingPvc: cf-postgresql
    #nodeSelector:
    #  kubernetes.io/hostname: storage-host-01
  
  consul:
    storageSize: 1Gi
    storageClass:
    #existingPvc: cf-consul-0
    #nodeSelector:
    #  kubernetes.io/hostname: storage-host-01
  
  redis:
    storageSize: 8Gi
    storageClass:
    #existingPvc: cf-redis
    #nodeSelector:
    #  kubernetes.io/hostname: storage-host-01
  
  rabbitmq:
    storageSize: 8Gi
    storageClass:
    #existingPvc: cf-rabbitmq
    #nodeSelector:
    #  kubernetes.io/hostname: storage-host-01
  
  cronus:
    storageSize: 1Gi
    storageClass:
    #existingPvc: cf-cronus
    #nodeSelector:
    #  kubernetes.io/hostname: storage-host-01
  
  chartmuseum:
    storageSize: 8Gi
    storageClass:
    #existingPvc: cf-chartmuseum
    #nodeSelector:
    #  kubernetes.io/hostname: storage-host-01
  
  hermes:
    redis:
  ## Set hermes store password. It is mandatory
      redisPassword: verysecurepassword
      storageSize: 8Gi
      storageClass:
      #existingPvc: cf-store
      #nodeSelector:
      #  kubernetes.io/hostname: storage-host-01
  
  registry:
    storageSize: 100Gi
    storageClass:
    #existingPvc: cf-registry
    #nodeSelector:
    #  kubernetes.io/hostname: storage-host-01
  # Insert custom registry configuration (https://docs.docker.com/registry/configuration/)
  #   registryConfig:
  #     version: 0.1
  #     log:
  #       level: debug
  #       fields:
  #         service: registry
  #     storage:
  #       cache:
  #         blobdescriptor: inmemory
  #       s3:
  #          region: YOUR_REGION
  #          bucket: YOUR_BUCKET_NAME
  #          accesskey: AWS_ACCESS_KEY
  #          secretkey: AWS_SECRET_KEY
  #     http:
  #       addr: :5000
  #       headers:
  #         X-Content-Type-Options: [nosniff]
  #     health:
  #       storagedriver:
  #         enabled: true
  #         interval: 10s
  #         threshold: 3 
  
  builder:
    nodeSelector: {}
  ## Set time to run docker cleaner  
    dockerCleanerCron: 0 0 * * *
  ## Override builder PV initial size
    storageSize: 100Gi
    storageClass:
    #existingPvc: cf-builder-0
  
  runner:
    nodeSelector: {}
  ## Set time to run docker cleaner  
    dockerCleanerCron: 0 0 * * *
  ## Override runner PV initial size
    storageSize: 100Gi
    storageClass:
    #existingPvc: cf-runner-0
  